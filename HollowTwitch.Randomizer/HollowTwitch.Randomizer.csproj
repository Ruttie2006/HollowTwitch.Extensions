<Project Sdk="Microsoft.NET.Sdk">
	<PropertyGroup>
		<RootNamespace>HollowTwitch.Randomizer</RootNamespace>
		<AssemblyName>HollowTwitch.Randomizer</AssemblyName>
		<TargetFramework>net472</TargetFramework>
		<AssemblyTitle>HollowTwitch.Randomizer</AssemblyTitle>
		<Product>HollowTwitch.Randomizer</Product>
		<OutputPath>bin\$(Configuration)\</OutputPath>
		<Version>1.0.0.0</Version>
		<LangVersion>latest</LangVersion>
		<DebugType>portable</DebugType>
		<HKDir>C:\Program Files (x86)\Steam\steamapps\common\Hollow Knight\hollow_knight_Data\Managed</HKDir>
	</PropertyGroup>

	<ItemGroup>
		<Reference Include="Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\Assembly-CSharp.dll</HintPath>
		</Reference>
		<Reference Include="HollowTwitch">
			<HintPath>..\..\HKTwitch\HollowTwitch\bin\Debug\net472\HollowTwitch.dll</HintPath>
		</Reference>
		<Reference Include="MMHOOK_Assembly-CSharp, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\MMHOOK_Assembly-CSharp.dll</HintPath>
		</Reference>
		<Reference Include="MonoMod.RuntimeDetour, Version=21.4.29.1, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\MonoMod.RuntimeDetour.dll</HintPath>
		</Reference>
		<Reference Include="Newtonsoft.Json, Version=11.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\Newtonsoft.Json.dll</HintPath>
		</Reference>
		<Reference Include="PlayMaker, Version=1.6.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\PlayMaker.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.AssetBundleModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.AssetBundleModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.AudioModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.AudioModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.CoreModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.CoreModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.ParticleSystemModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.ParticleSystemModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.Physics2DModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.Physics2DModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.UnityWebRequestModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.UnityWebRequestModule.dll</HintPath>
		</Reference>
		<Reference Include="UnityEngine.UnityWebRequestTextureModule, Version=0.0.0.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\UnityEngine.UnityWebRequestTextureModule.dll</HintPath>
		</Reference>
		<Reference Include="RandomizerMod, Version=4.0.9.0, Culture=neutral, PublicKeyToken=null">
			<HintPath>$(HKDir)\Mods\Randomizer 4\RandomizerMod.dll</HintPath>
		</Reference>
	</ItemGroup>

	<Target Name="CopyMod" AfterTargets="PostBuildEvent" Condition="false">
		<Copy SourceFiles="$(TargetPath);$(TargetDir)$(TargetName).pdb" DestinationFolder="$(HKDir)/Mods/$(TargetName)" SkipUnchangedFiles="true" />
	</Target>

	<Target Name="CreateReleaseZip" AfterTargets="PostBuildEvent" Condition="'$(Configuration)' == 'Release'">
		<MakeDir Directories="$(ProjectDir)Output" />
		<Delete Files="$(ProjectDir)/$(TargetName).zip" />
		<Copy SourceFiles="$(TargetPath)" DestinationFolder="$(ProjectDir)/Output/" />
		<Copy SourceFiles="$(TargetDir)$(TargetName).pdb" DestinationFolder="$(ProjectDir)/Output/" />
		<Copy Condition="Exists('$(SolutionDir)/README.md')" SourceFiles="$(SolutionDir)/README.md" DestinationFolder="$(ProjectDir)/Output/" ContinueOnError="true" />
		<ZipDirectory DestinationFile="$(ProjectDir)/$(TargetName).zip" SourceDirectory="$(ProjectDir)/Output" />
		<RemoveDir Directories="$(ProjectDir)Output" />

		<GetFileHash Files="$(ProjectDir)/$(TargetName).zip" Algorithm="SHA256">
			<Output TaskParameter="Items" ItemName="FilesWithHashes" />
		</GetFileHash>
		<Message Importance="High" Text="@(FilesWithHashes->'%(Identity): %(FileHash)')" />
	</Target>
</Project>
